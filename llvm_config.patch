diff --git a/util/chplenv/chpl_llvm.py b/util/chplenv/chpl_llvm.py
index 711c67a2..2bc72a3d 100755
--- a/util/chplenv/chpl_llvm.py
+++ b/util/chplenv/chpl_llvm.py
@@ -107,6 +107,8 @@ def check_llvm_config(llvm_config):
 #
 # Returns a tuple like (isOk, errorMessage)
 def check_llvm_packages(llvm_config):
+    return (True, "")
+
     llvm_header = ''
     llvm_include_ok = False
     clang_header = ''
@@ -363,29 +365,52 @@ def get_llvm_clang_command_name(lang):
     else:
         return 'clang'
 
+def get_possible_clang_installation_directories():
+    bindir = get_system_llvm_config_bindir()
+    paths = [bindir] + os.environ["PATH"].split(":")
+    return paths
+
+def get_possible_clang_executables(lang):
+    clang_name = get_llvm_clang_command_name(lang)
+    for folder in get_possible_clang_installation_directories():
+        for file in os.listdir(folder):
+            if clang_name in file:
+                yield os.path.join(folder, file)
+
 @memoize
 def get_system_llvm_clang(lang):
-    clang_name = get_llvm_clang_command_name(lang)
-    bindir = get_system_llvm_config_bindir()
-    clang = ''
-    if bindir:
-        clang = os.path.join(bindir, clang_name)
-
-        if not os.path.exists(clang):
-            # also try /usr/bin/clang since some OSes use that
-            # for the clang package
-            usr_bin = "/usr/bin"
-            clang2 = os.path.join(usr_bin, clang_name);
-            if os.path.exists(clang2):
-                llvm_config = find_system_llvm_config()
-                # check that clang --version matches llvm-config --version
-                clangv = run_command([clang2, '--version']).strip()
-                llvmv = run_command([llvm_config, '--version']).strip()
-
-                if llvmv in clangv:
-                    clang = clang2
-
-    return clang
+    llvm_config = find_system_llvm_config()
+    llvm_version = run_command([llvm_config, '--version']).strip()
+
+    for clang_path in get_possible_clang_executables(lang):
+        clang_version = run_command([clang_path, '--version']).strip()
+        if llvm_version in clang_version:
+            return clang_path
+    return ''
+
+# @memoize
+# def get_system_llvm_clang(lang):
+#     clang_name = get_llvm_clang_command_name(lang)
+#     bindir = get_system_llvm_config_bindir()
+#     clang = ''
+#     if bindir:
+#         clang = os.path.join(bindir, clang_name)
+# 
+#         if not os.path.exists(clang):
+#             # also try /usr/bin/clang since some OSes use that
+#             # for the clang package
+#             usr_bin = "/usr/bin"
+#             clang2 = os.path.join(usr_bin, clang_name);
+#             if os.path.exists(clang2):
+#                 llvm_config = find_system_llvm_config()
+#                 # check that clang --version matches llvm-config --version
+#                 clangv = run_command([clang2, '--version']).strip()
+#                 llvmv = run_command([llvm_config, '--version']).strip()
+# 
+#                 if llvmv in clangv:
+#                     clang = clang2
+# 
+#     return clang
 
 # lang should be C or CXX
 # returns [] list with the first element the clang command,
